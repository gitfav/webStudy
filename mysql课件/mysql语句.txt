1、insert into student (sid,score,name) values(1,'2','2e2dwq'),(2,'3','12edawed') on duplicate key update score=values(score),name=VALUES(name);
在student更新数据，如果没有这条数据侧插入。
----2015.11.01



2、使用了case when 这个小技巧来实现批量更新。
举个例子：

UPDATE categories
    SET display_order = CASE id
        WHEN 1 THEN 3
        WHEN 2 THEN 4
        WHEN 3 THEN 5
    END
WHERE id IN (1,2,3)

这句sql的意思是，更新display_order 字段，如果id=1 则display_order 的值为3，如果id=2 则 display_order 的值为4，如果id=3 则 display_order 的值为5。
即是将条件语句写在了一起。
这里的where部分不影响代码的执行，但是会提高sql执行的效率。确保sql语句仅执行需要修改的行数，这里只有3条数据进行更新，而where子句确保只有3行数据执行。

如果更新多个值的话，只需要稍加修改：

UPDATE categories
    SET display_order = CASE id
        WHEN 1 THEN 3
        WHEN 2 THEN 4
        WHEN 3 THEN 5
    END,
    title = CASE id
        WHEN 1 THEN 'New Title 1'
        WHEN 2 THEN 'New Title 2'
        WHEN 3 THEN 'New Title 3'
    END
WHERE id IN (1,2,3)

到这里，已经完成一条mysql语句更新多条记录了。
----2015.11.02


3、在查询一个表时，同时获得另一个表的某几个字段的和。
SELECT
reward_id,(SELECT sum(reward_integral) from h_task_reward where reward_id=2) as all_integral
from h_task_log
where log_id=9;


update h_task_log a inner join h_task_info b set a.cycle_is_finish=1,a.task_updatetime=111111 where a.wx_id=5 and a.task_id=b.task_id and b.task_type=1 and a.cycle_is_finish=-1 and a.task_status=1 and b.task_status=1;
update h_wxuser_task set wx_name="wang",wx_img_face="/images/sdf.jpg",center_updatetime='123123113' where wx_id=(select wx_id from h_wxuser where wx_openid="vjdricbdwed23ed323_kdkfs");